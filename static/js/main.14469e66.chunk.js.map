{"version":3,"sources":["toneGenerator.js","Selector.js","Controls.js","EffectSelect.js","Help.js","Keyboard.js","App.js","reportWebVitals.js","index.js"],"names":["toneGenerator","this","delay","Tone","vibrato","filter","distortion","synth","chain","connectChain","frequency","mod","triggerAttack","value","includes","depth","wet","triggerRelease","effect","length","push","splice","console","log","fx","Selector","props","useState","menuOpen","setMenuOpen","self","useRef","useEffect","document","addEventListener","e","current","contains","target","displayValue","options","find","option","selectedValue","className","ref","name","onClick","display","map","stopPropagation","onSelect","Controls","baseOctaveOptions","Array","forEach","_","i","octavesOptions","selectedKey","setKey","startingOctave","setStartingOctave","octaves","setOctaves","EffectSelect","activeEffects","addEffect","allEffects","active","Help","visible","setVisible","Keyboard","player","key","effects","setEffects","touched","setTouched","frequencyScale","scaleLog","domain","window","innerHeight","range","floor","getFreqRange","modScale","innerWidth","getFreq","position","parseInt","getMod","invert","touchStart","a","changedTouches","clientX","freq","clientY","play","touchMove","changeMod","changeFreq","touchEnd","stop","startAudioContext","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","removeEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14469e66.chunk.js","sourcesContent":["import * as Tone from 'tone';\n\nclass toneGenerator {\n\n    constructor() {\n\n\n        this.delay = new Tone.FeedbackDelay('4n');\n        this.vibrato = new Tone.Vibrato();\n        this.filter = new Tone.Filter(20000, 'lowpass');\n        this.distortion = new Tone.Distortion();\n        this.synth = new Tone.Synth();\n\n        this.chain = [\n            this.distortion,\n        ]\n\n        this.connectChain();\n\n    }\n\n    play(frequency, mod) {\n\n        this.synth.triggerAttack();\n        this.filter.frequency.value = mod * 150;\n        this.synth.frequency.value = frequency;\n    }\n\n    changeFreq(frequency) {\n        this.synth.frequency.value = frequency;\n    }\n\n    changeMod(value) {\n        if (this.chain.includes(this.filter)) {\n            this.filter.frequency.value = value * 150;\n        }\n        if (this.chain.includes(this.vibrato)) {\n            this.vibrato.depth.value = value / 100;\n        }\n        if (this.chain.includes(this.delay)) {\n            this.delay.wet.value = value / 100;\n        }\n        \n    }\n\n    stop() {\n        this.synth.triggerRelease()\n    }\n\n    connectChain() {\n\n        // this.chain.reduce((previousNode, currentNode, i, arr) => {\n\n        //     previousNode.connect(currentNode);\n\n        //     if (i === arr.length - 1) {\n        //         currentNode.toDestination();\n        //     }\n\n        //     return currentNode;\n            \n        // });\n\n        this.synth.chain(...this.chain, Tone.Destination)\n\n    }\n\n    addEffect(effect) {\n\n        if (effect === 'filter') {\n            if (this.chain.length < 2) {\n                this.chain.push(this.filter);\n            } else {\n                this.chain.splice(1, 0, this.filter);\n            }            \n        }\n\n\n        if (effect === 'vibrato') {\n            if (this.chain.length === 1) {\n                this.chain.push(this.vibrato);\n            } else if (this.chain.length === 2) {\n                if (this.chain[1] === this.filter) {\n                    this.chain.push(this.vibrato);\n                } else {\n                    this.chain.splice(1, 0, this.vibrato);\n                }\n            } else if (this.chain.length === 3) {\n                this.chain.splice(2, 0, this.vibrato);\n            }\n        }\n\n        if (effect === 'delay') {\n            if (this.chain.length < 2) {\n                this.chain.push(this.delay);\n            } else {\n                this.chain.splice(4, 0, this.delay);\n            }\n        }\n\n\n        this.connectChain();\n        console.log(this.chain)\n\n    }\n\n    removeEffect(effect) {\n\n        if (effect === 'filter') {\n            this.chain = this.chain.filter(fx => fx !== this.filter);\n        }\n\n        if (effect === 'vibrato') {\n            this.chain = this.chain.filter(fx => fx !== this.vibrato);\n        }\n\n        if (effect === 'delay') {\n            this.chain = this.chain.filter(fx => fx !== this.delay);\n        }\n\n\n        this.connectChain();\n        console.log(this.chain)\n\n    }\n\n\n\n}\n\n\nexport default toneGenerator;","import React, { useState, useRef, useEffect } from 'react';\n\nconst Selector = (props) => {\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const self = useRef(null);\n\n    useEffect(() => {\n        document.addEventListener('touchstart', e => {\n            if (self.current.contains(e.target)) {\n                return;\n            }\n\n            setMenuOpen(false);\n        });\n    }, []);\n\n    const showOptions = () => {\n\n        return props.options\n            .filter(option => option.value !== props.selectedValue)\n            .map(option => {\n            return (\n                <div\n                    className=\"option\"\n                    onClick={e => {\n                        e.stopPropagation();\n                        props.onSelect(option.value);\n                        setMenuOpen(false);\n                    }}\n                    key={option.value}\n                >\n                    {option.display}\n                </div>\n            );\n        });\n    };\n\n    const displayValue = props.options.find(option => option.value === props.selectedValue);\n\n    return (\n        <div className=\"selector\" ref={self}>\n            <div className=\"selector-name\">\n                {props.name}:\n            </div>\n            <div\n                className=\"selector-menu\"\n                onClick={() => setMenuOpen(!menuOpen)}\n                \n            >\n                <div className=\"selector-selected\">\n                    {displayValue.display}\n                </div>\n                <div className=\"selector-options\">\n                    {menuOpen && showOptions()}\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Selector;","import React from 'react';\nimport Selector from './Selector';\n\nconst Controls = props => {\n\n    const BASE_OCTAVES = 7;\n    const OCTAVE_RANGE = 12;\n\n    const keyOptions = [\n        {display: 'C', value: 32.7},\n        { display: 'C#', value: 34.65 },\n        { display: 'D', value: 36.71, },\n        { display: 'D#', value: 38.89 },\n        { display: 'E', value: 41.20, },\n        { display: 'F', value: 43.65, },\n        { display: 'F#', value: 46.25 },\n        { display: 'G', value: 49},\n        { display: 'G#', value: 51.91 },\n        { display: 'A', value: 55 },\n        { display: 'A#', value: 58.27 },\n        { display: 'B', value: 61.74 }\n    ];\n\n    const baseOctaveOptions = [];\n\n    [...Array(BASE_OCTAVES)].forEach((_, i) => {\n        baseOctaveOptions.push({ display: i + 1, value: i + 1 });\n    });\n\n    const octavesOptions = [];\n\n    [...Array(OCTAVE_RANGE)].forEach((_, i) => {\n        octavesOptions.push({ display: i + 1, value: i + 1 });\n    });\n\n    return (\n        <div className=\"margin-top\">\n            <div className=\"controls\">\n\n                <Selector\n                    name=\"Key\"\n                    options={keyOptions}\n                    selectedValue={props.selectedKey}\n                    onSelect={props.setKey}\n                />\n\n                <Selector\n                    name=\"Base Octave\"\n                    options={baseOctaveOptions}\n                    selectedValue={props.startingOctave}\n                    onSelect={props.setStartingOctave}\n                />\n\n                <Selector\n                    name=\"Octave Range\"\n                    options={octavesOptions}\n                    selectedValue={props.octaves}\n                    onSelect={props.setOctaves}\n                />\n\n            </div>\n        </div>\n    );\n\n};\n\nexport default Controls;","import React from 'react';\n\nconst EffectSelect = props => {\n\n    const { activeEffects, addEffect } = props;\n\n    const allEffects = [\n        'filter',\n        'vibrato',\n        'delay'\n    ];\n\n    const showEffects = () => {\n        return allEffects.map(effect => {\n            const active = activeEffects.includes(effect) ? 'active' : '';\n            return (\n                <div\n                    className={`effect ${active}`}\n                    onClick={() => addEffect(effect)}\n                    key={effect}\n                >\n                    {effect}\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div className=\"effect-select\">\n            {showEffects()}\n        </div>\n    );\n};\n\nexport default EffectSelect;","import React, { useState } from 'react';\n\nconst Help = () => {\n\n    const [visible, setVisible] = useState(false);\n\n    const showHelp = () => {\n        return (\n            <div>\n                <p>\n                    Touch the screen and a sound will be created.  Moving your finger up and down will get a lower or higher note.  You can customize the range of pitches: the key sets the note of the lowest part of the screen.  The base note sets which octave of that lowest note, and the octave range adjusts how many octaves are available.  The more octaves, the larger the range of notes that you can create.\n                </p>\n                <p>\n                    If you move your finger from left to right, you will increase the intensity of the effects, which are shown on the bottom of the screen.  Touch an effect's name to apply it to your sound.\n                </p>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"help\" onClick={() => setVisible(!visible)}>\n            {visible ? showHelp() : '?'}\n        </div>\n    );\n};\n\nexport default Help;","import React, { useState } from 'react';\nimport { scaleLog } from 'd3';\nimport * as Tone from 'tone';\n\nimport './Keyboard.css';\nimport toneGenerator from './toneGenerator';\nimport Controls from './Controls';\nimport EffectSelect from './EffectSelect';\nimport Help from './Help';\n\nconst Keyboard = (props) => {\n\n    const [player, setPlayer] = useState(new toneGenerator());\n    const [key, setKey] = useState(32.7);\n    const [startingOctave, setStartingOctave] = useState(3);\n    const [octaves, setOctaves] = useState(3);\n    const [effects, setEffects] = useState([]);\n    const [touched, setTouched] = useState(false);\n\n\n    const getFreqRange = () => {\n        const floor = key * startingOctave;\n        const ceiling = floor * octaves * 2;\n\n        return [floor, ceiling];\n    };\n\n    const frequencyScale = scaleLog()\n        .domain([\n            window.innerHeight * 0.85,\n            window.innerHeight * .05\n        ])\n        .range(getFreqRange());\n\n    const modScale = scaleLog()\n        .domain([1, 100])\n        .range([1, window.innerWidth]);\n\n    const getFreq = position => {\n        return frequencyScale(parseInt(position));\n    };\n\n    const getMod = position => {\n        return modScale.invert(position);\n    };\n\n    const touchStart = async (e) => {\n\n        const mod = getMod(e.changedTouches[0].clientX);\n        const freq = getFreq(e.changedTouches[0].clientY);\n        player.play(freq, mod);\n\n    };\n\n    const touchMove = e => {\n        const freq = getFreq(e.changedTouches[0].clientY);\n        const mod = getMod(e.changedTouches[0].clientX);\n        player.changeMod(mod);\n        player.changeFreq(freq);\n\n    };\n\n    const touchEnd = () => {\n        player.stop();\n    }\n\n    const startAudioContext = async () => {\n        await Tone.start();\n        setTouched(true);\n    };\n\n    const addEffect = effect => {\n        if (!effects.includes(effect)) {\n            player.addEffect(effect);\n            setEffects([...effects, effect]);\n        } else {\n            player.removeEffect(effect);\n            setEffects(effects.filter(fx => fx !== effect));\n        }\n    }\n\n\n    const showKeyboard = () => {\n \n        if (!touched) {\n            return (\n                <div\n                    className='keyboard'\n                    onTouchStart={startAudioContext}\n                >\n                    <div className=\"start\">\n                        Touch to start.\n                        <br />\n                        <br />\n                        This web app only works on mobile devices. For iPhone, make sure your ringer is on.\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className='keyboard'\n                onTouchStart={touchStart}\n                onTouchMove={touchMove}\n                onTouchEnd={touchEnd}\n                onTouchCancel={touchEnd}\n            >\n                <Help />\n            </div>\n        );\n    };\n\n    return (\n        <div className='container'>\n            <Controls\n                selectedKey = {key}\n                setKey = {setKey}\n                octaves = {octaves}\n                setOctaves = {setOctaves}\n                startingOctave = {startingOctave}\n                setStartingOctave = {setStartingOctave}\n            />\n            \n\n            {showKeyboard()}\n\n            \n\n            <EffectSelect\n                addEffect={addEffect}\n                activeEffects={effects}\n            />\n        </div>\n    );\n};\n\nexport default Keyboard;","\nimport './App.css';\nimport Keyboard from './Keyboard';\n\nfunction App() {\n  return (\n    <Keyboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}