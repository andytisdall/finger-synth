{"version":3,"sources":["toneGenerator.js","Selector.js","Controls.js","Keyboard.js","App.js","reportWebVitals.js","index.js"],"names":["toneGenerator","this","filter","Tone","toDestination","distortion","connect","synth","frequency","mod","triggerAttack","value","triggerRelease","Selector","props","useState","menuOpen","setMenuOpen","self","useRef","useEffect","document","addEventListener","e","current","contains","target","displayValue","options","find","option","selectedValue","className","ref","name","onClick","display","map","stopPropagation","onSelect","Controls","baseOctaveOptions","Array","forEach","_","i","push","octavesOptions","selectedKey","setKey","startingOctave","setStartingOctave","octaves","setOctaves","Keyboard","player","setPlayer","key","frequencyScale","scaleLog","domain","window","innerHeight","range","floor","getFreqRange","modScale","innerWidth","getFreq","position","parseInt","getMod","invert","touchStart","a","changedTouches","clientX","freq","clientY","play","touchMove","changeMod","changeFreq","touchEnd","stop","startAudioContext","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.201d11b0.chunk.js","sourcesContent":["import * as Tone from 'tone';\n\nclass toneGenerator {\n\n    constructor() {\n\n        this.filter = new Tone.Filter(20000, 'lowpass').toDestination();\n        this.distortion = new Tone.Distortion().connect(this.filter)\n        this.synth = new Tone.Synth().connect(this.distortion);\n\n\n    }\n\n    play(frequency, mod) {\n\n        this.synth.triggerAttack();\n        this.filter.frequency.value = mod * 150;\n        this.synth.frequency.value = frequency;\n    }\n\n    changeFreq(frequency) {\n        this.synth.frequency.value = frequency;\n    }\n\n    changeMod(value) {\n        this.filter.frequency.value = value * 150;\n    }\n\n    stop() {\n        this.synth.triggerRelease()\n    }\n\n}\n\n\nexport default toneGenerator;","import React, { useState, useRef, useEffect } from 'react';\n\nconst Selector = (props) => {\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const self = useRef(null);\n\n    useEffect(() => {\n        document.addEventListener('touchstart', e => {\n            if (self.current.contains(e.target)) {\n                return;\n            }\n\n            setMenuOpen(false);\n        });\n    }, []);\n\n    const showOptions = () => {\n\n        return props.options\n            .filter(option => option.value !== props.selectedValue)\n            .map(option => {\n            return (\n                <div\n                    className=\"option\"\n                    onClick={e => {\n                        e.stopPropagation();\n                        props.onSelect(option.value);\n                        setMenuOpen(false);\n                    }}\n                    key={option.value}\n                >\n                    {option.display}\n                </div>\n            );\n        });\n    };\n\n    const displayValue = props.options.find(option => option.value === props.selectedValue);\n\n    return (\n        <div className=\"selector\" ref={self}>\n            <div className=\"selector-name\">\n                {props.name}\n            </div>\n            <div\n                className=\"selector-menu\"\n                onClick={() => setMenuOpen(!menuOpen)}\n                \n            >\n                <div className=\"selector-selected\">\n                    {displayValue.display}\n                </div>\n                <div className=\"selector-options\">\n                    {menuOpen && showOptions()}\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Selector;","import React from 'react';\nimport Selector from './Selector';\n\nconst Controls = props => {\n\n    const BASE_OCTAVES = 7;\n    const OCTAVE_RANGE = 12;\n\n    const keyOptions = [\n        {display: 'C', value: 32.7},\n        { display: 'C#', value: 34.65 },\n        { display: 'D', value: 36.71, },\n        { display: 'D#', value: 38.89 },\n        { display: 'E', value: 41.20, },\n        { display: 'F', value: 43.65, },\n        { display: 'F#', value: 46.25 },\n        { display: 'G', value: 49},\n        { display: 'G#', value: 51.91 },\n        { display: 'A', value: 55 },\n        { display: 'A#', value: 58.27 },\n        { display: 'B', value: 61.74 }\n    ];\n\n    const baseOctaveOptions = [];\n\n    [...Array(BASE_OCTAVES)].forEach((_, i) => {\n        baseOctaveOptions.push({ display: i + 1, value: i + 1 });\n    });\n\n    const octavesOptions = [];\n\n    [...Array(OCTAVE_RANGE)].forEach((_, i) => {\n        octavesOptions.push({ display: i + 1, value: i + 1 });\n    });\n\n    return (\n        <div className=\"margin-top\">\n            <div className=\"controls\">\n\n                <Selector\n                    name=\"Key\"\n                    options={keyOptions}\n                    selectedValue={props.selectedKey}\n                    onSelect={props.setKey}\n                />\n\n                <Selector\n                    name=\"Base Octave\"\n                    options={baseOctaveOptions}\n                    selectedValue={props.startingOctave}\n                    onSelect={props.setStartingOctave}\n                />\n\n                <Selector\n                    name=\"Octave Range\"\n                    options={octavesOptions}\n                    selectedValue={props.octaves}\n                    onSelect={props.setOctaves}\n                />\n\n            </div>\n        </div>\n    );\n\n};\n\nexport default Controls;","import React, { useState } from 'react';\nimport { scaleLog } from 'd3';\nimport * as Tone from 'tone';\n\nimport './Keyboard.css';\nimport toneGenerator from './toneGenerator';\nimport Controls from './Controls';\n\nconst Keyboard = (props) => {\n\n    const [player, setPlayer] = useState(null);\n    const [key, setKey] = useState(32.7);\n    const [startingOctave, setStartingOctave] = useState(3);\n    const [octaves, setOctaves] = useState(3);\n\n\n    const getFreqRange = () => {\n        const floor = key * startingOctave;\n        const ceiling = floor * octaves * 2;\n\n        return [floor, ceiling];\n    };\n\n    const frequencyScale = scaleLog()\n        .domain([\n            window.innerHeight * 0.9,\n            window.innerHeight * .05\n        ])\n        .range(getFreqRange());\n\n    const modScale = scaleLog()\n        .domain([1, 100])\n        .range([1, window.innerWidth]);\n\n    const getFreq = position => {\n        return frequencyScale(parseInt(position));\n    };\n\n    const getMod = position => {\n        return modScale.invert(position);\n    };\n\n    const touchStart = async (e) => {\n\n        const mod = getMod(e.changedTouches[0].clientX);\n        const freq = getFreq(e.changedTouches[0].clientY);\n        player.play(freq, mod);\n\n    };\n\n    const touchMove = e => {\n        const freq = getFreq(e.changedTouches[0].clientY);\n        const mod = getMod(e.changedTouches[0].clientX);\n        player.changeMod(mod);\n        player.changeFreq(freq);\n\n    };\n\n    const touchEnd = () => {\n        player.stop();\n    }\n\n    const startAudioContext = async () => {\n        await Tone.start();\n        setPlayer(new toneGenerator());\n    };\n\n    const showKeyboard = () => {\n \n        if (!player) {\n            return (\n                <div\n                    className='keyboard'\n                    onTouchStart={startAudioContext}\n                >\n                    <div className=\"start\">\n                        Press to Start\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className='keyboard'\n                onTouchStart={touchStart}\n                onTouchMove={touchMove}\n                onTouchEnd={touchEnd}\n                onTouchCancel={touchEnd}\n            />\n        );\n    };\n\n    return (\n        <div className='container'>\n            <Controls\n                selectedKey = {key}\n                setKey = {setKey}\n                octaves = {octaves}\n                setOctaves = {setOctaves}\n                startingOctave = {startingOctave}\n                setStartingOctave = {setStartingOctave}\n            />\n\n            {showKeyboard()}\n\n            <div className='margin-bottom'/>\n        </div>\n    );\n};\n\nexport default Keyboard;","\nimport './App.css';\nimport Keyboard from './Keyboard';\n\nfunction App() {\n  return (\n    <Keyboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}