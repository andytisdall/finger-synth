{"version":3,"sources":["toneGenerator.js","Selector.js","Controls.js","EffectSelect.js","Keyboard.js","App.js","reportWebVitals.js","index.js"],"names":["toneGenerator","this","delay","Tone","vibrato","filter","distortion","synth","chain","connectChain","frequency","mod","triggerAttack","value","includes","depth","wet","triggerRelease","effect","length","push","splice","pop","disconnect","Selector","props","useState","menuOpen","setMenuOpen","self","useRef","useEffect","document","addEventListener","e","current","contains","target","displayValue","options","find","option","selectedValue","className","ref","name","onClick","display","map","stopPropagation","onSelect","Controls","baseOctaveOptions","Array","forEach","_","i","octavesOptions","selectedKey","setKey","startingOctave","setStartingOctave","octaves","setOctaves","EffectSelect","activeEffects","addEffect","allEffects","active","Keyboard","player","key","effects","setEffects","frequencyScale","scaleLog","domain","window","innerHeight","range","floor","getFreqRange","modScale","innerWidth","getFreq","position","parseInt","getMod","invert","touchStart","a","changedTouches","clientX","freq","clientY","play","touchMove","changeMod","changeFreq","touchEnd","stop","startAudioContext","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","removeEffect","fx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+TAuIeA,E,WAnIX,aAAe,oBAGXC,KAAKC,MAAQ,IAAIC,IAAmB,MACpCF,KAAKG,QAAU,IAAID,IACnBF,KAAKI,OAAS,IAAIF,IAAY,IAAO,WACrCF,KAAKK,WAAa,IAAIH,IACtBF,KAAKM,MAAQ,IAAIJ,IAEjBF,KAAKO,MAAQ,CACTP,KAAKK,YAGTL,KAAKQ,e,wCAIT,SAAKC,EAAWC,GAEZV,KAAKM,MAAMK,gBACXX,KAAKI,OAAOK,UAAUG,MAAc,IAANF,EAC9BV,KAAKM,MAAMG,UAAUG,MAAQH,I,wBAGjC,SAAWA,GACPT,KAAKM,MAAMG,UAAUG,MAAQH,I,uBAGjC,SAAUG,GACFZ,KAAKO,MAAMM,SAASb,KAAKI,UACzBJ,KAAKI,OAAOK,UAAUG,MAAgB,IAARA,GAE9BZ,KAAKO,MAAMM,SAASb,KAAKG,WACzBH,KAAKG,QAAQW,MAAMF,MAAQA,EAAQ,KAEnCZ,KAAKO,MAAMM,SAASb,KAAKC,SACzBD,KAAKC,MAAMc,IAAIH,MAAQA,EAAQ,O,kBAKvC,WACIZ,KAAKM,MAAMU,mB,0BAGf,WAAgB,IAAD,GAcX,EAAAhB,KAAKM,OAAMC,MAAX,oBAAoBP,KAAKO,OAAzB,QAAgCL,S,uBAIpC,SAAUe,GAES,WAAXA,IACIjB,KAAKO,MAAMW,OAAS,EACpBlB,KAAKO,MAAMY,KAAKnB,KAAKI,QAErBJ,KAAKO,MAAMa,OAAO,EAAG,EAAGpB,KAAKI,SAKtB,YAAXa,IACIjB,KAAKO,MAAMW,OAAS,EACpBlB,KAAKO,MAAMY,KAAKnB,KAAKG,SAErBH,KAAKO,MAAMa,OAAO,EAAG,EAAGpB,KAAKG,UAItB,UAAXc,IACIjB,KAAKO,MAAMW,OAAS,EACpBlB,KAAKO,MAAMY,KAAKnB,KAAKC,OAErBD,KAAKO,MAAMa,OAAO,EAAG,EAAGpB,KAAKC,QAKrCD,KAAKQ,iB,0BAIT,SAAaS,GAEM,WAAXA,GACAjB,KAAKO,MAAMc,IAAI,GAAGC,aAGP,YAAXL,IAC0B,IAAtBjB,KAAKO,MAAMW,OACXlB,KAAKO,MAAMc,IAAI,GAAGC,aAIlBtB,KAAKO,MAAMc,IAAI,GAAGC,cAIX,UAAXL,IAC0B,IAAtBjB,KAAKO,MAAMW,OACXlB,KAAKO,MAAMc,IAAI,GAAGC,aACW,IAAtBtB,KAAKO,MAAMW,OAClBlB,KAAKO,MAAMc,IAAI,GAAGC,aAElBtB,KAAKO,MAAMc,IAAI,GAAGC,cAK1BtB,KAAKQ,mB,YChEEe,EA5DE,SAACC,GAEd,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,iBAAO,MAEpBC,qBAAU,WACNC,SAASC,iBAAiB,cAAc,SAAAC,GAChCL,EAAKM,QAAQC,SAASF,EAAEG,SAI5BT,GAAY,QAEjB,IAEH,IAqBMU,EAAeb,EAAMc,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAO5B,QAAUY,EAAMiB,iBAEzE,OACI,sBAAKC,UAAU,WAAWC,IAAKf,EAA/B,UACI,qBAAKc,UAAU,gBAAf,SACKlB,EAAMoB,OAEX,sBACIF,UAAU,gBACVG,QAAS,kBAAMlB,GAAaD,IAFhC,UAKI,qBAAKgB,UAAU,oBAAf,SACKL,EAAaS,UAElB,qBAAKJ,UAAU,mBAAf,SACKhB,GAnCNF,EAAMc,QACRlC,QAAO,SAAAoC,GAAM,OAAIA,EAAO5B,QAAUY,EAAMiB,iBACxCM,KAAI,SAAAP,GACL,OACI,qBACIE,UAAU,SACVG,QAAS,SAAAZ,GACLA,EAAEe,kBACFxB,EAAMyB,SAAST,EAAO5B,OACtBe,GAAY,IALpB,SASKa,EAAOM,SAFHN,EAAO5B,mBCoCjBsC,EA/DE,SAAA1B,GAEb,IAkBM2B,EAAoB,GAE1B,YAAIC,MApBiB,IAoBIC,SAAQ,SAACC,EAAGC,GACjCJ,EAAkBhC,KAAK,CAAE2B,QAASS,EAAI,EAAG3C,MAAO2C,EAAI,OAGxD,IAAMC,EAAiB,GAMvB,OAJA,YAAIJ,MAzBiB,KAyBIC,SAAQ,SAACC,EAAGC,GACjCC,EAAerC,KAAK,CAAE2B,QAASS,EAAI,EAAG3C,MAAO2C,EAAI,OAIjD,qBAAKb,UAAU,aAAf,SACI,sBAAKA,UAAU,WAAf,UAEI,cAAC,EAAD,CACIE,KAAK,MACLN,QAjCG,CACf,CAACQ,QAAS,IAAKlC,MAAO,MACtB,CAAEkC,QAAS,KAAMlC,MAAO,OACxB,CAAEkC,QAAS,IAAKlC,MAAO,OACvB,CAAEkC,QAAS,KAAMlC,MAAO,OACxB,CAAEkC,QAAS,IAAKlC,MAAO,MACvB,CAAEkC,QAAS,IAAKlC,MAAO,OACvB,CAAEkC,QAAS,KAAMlC,MAAO,OACxB,CAAEkC,QAAS,IAAKlC,MAAO,IACvB,CAAEkC,QAAS,KAAMlC,MAAO,OACxB,CAAEkC,QAAS,IAAKlC,MAAO,IACvB,CAAEkC,QAAS,KAAMlC,MAAO,OACxB,CAAEkC,QAAS,IAAKlC,MAAO,QAsBX6B,cAAejB,EAAMiC,YACrBR,SAAUzB,EAAMkC,SAGpB,cAAC,EAAD,CACId,KAAK,cACLN,QAASa,EACTV,cAAejB,EAAMmC,eACrBV,SAAUzB,EAAMoC,oBAGpB,cAAC,EAAD,CACIhB,KAAK,eACLN,QAASkB,EACTf,cAAejB,EAAMqC,QACrBZ,SAAUzB,EAAMsC,mBCvBrBC,EAhCM,SAAAvC,GAEjB,IAAQwC,EAA6BxC,EAA7BwC,cAAeC,EAAczC,EAAdyC,UAEjBC,EAAa,CACf,SACA,UACA,SAkBJ,OACI,qBAAKxB,UAAU,gBAAf,SAfOwB,EAAWnB,KAAI,SAAA9B,GAClB,IAAMkD,EAASH,EAAcnD,SAASI,GAAU,SAAW,GAC3D,OACI,qBACIyB,UAAS,iBAAYyB,GACrBtB,QAAS,kBAAMoB,EAAUhD,IAF7B,SAKKA,GAFIA,SC2GVmD,EArHE,SAAC5C,GAEd,MAA4BC,mBAAS,IAAI1B,GAAzC,mBAAOsE,EAAP,KACA,GADA,KACsB5C,mBAAS,OAA/B,mBAAO6C,EAAP,KAAYZ,EAAZ,KACA,EAA4CjC,mBAAS,GAArD,mBAAOkC,EAAP,KAAuBC,EAAvB,KACA,EAA8BnC,mBAAS,GAAvC,mBAAOoC,EAAP,KAAgBC,EAAhB,KACA,EAA8BrC,mBAAS,IAAvC,mBAAO8C,EAAP,KAAgBC,EAAhB,KAUMC,EAAiBC,cAClBC,OAAO,CACiB,IAArBC,OAAOC,YACc,IAArBD,OAAOC,cAEVC,MAZgB,WACjB,IAAMC,EAAQT,EAAMX,EAGpB,MAAO,CAACoB,EAFQA,EAAQlB,EAAU,GAU3BmB,IAELC,EAAWP,cACZC,OAAO,CAAC,EAAG,MACXG,MAAM,CAAC,EAAGF,OAAOM,aAEhBC,EAAU,SAAAC,GACZ,OAAOX,EAAeY,SAASD,KAG7BE,EAAS,SAAAF,GACX,OAAOH,EAASM,OAAOH,IAGrBI,EAAU,uCAAG,WAAOvD,GAAP,iBAAAwD,EAAA,sDAET/E,EAAM4E,EAAOrD,EAAEyD,eAAe,GAAGC,SACjCC,EAAOT,EAAQlD,EAAEyD,eAAe,GAAGG,SACzCxB,EAAOyB,KAAKF,EAAMlF,GAJH,2CAAH,sDAQVqF,EAAY,SAAA9D,GACd,IAAM2D,EAAOT,EAAQlD,EAAEyD,eAAe,GAAGG,SACnCnF,EAAM4E,EAAOrD,EAAEyD,eAAe,GAAGC,SACvCtB,EAAO2B,UAAUtF,GACjB2D,EAAO4B,WAAWL,IAIhBM,EAAW,WACb7B,EAAO8B,QAGLC,EAAiB,uCAAG,sBAAAX,EAAA,sEAChBvF,MADgB,2CAAH,qDAyCvB,OACI,sBAAKwC,UAAU,YAAf,UACI,cAAC,EAAD,CACIe,YAAea,EACfZ,OAAUA,EACVG,QAAWA,EACXC,WAAcA,EACdH,eAAkBA,EAClBC,kBAAqBA,IAhCxBS,EAcD,qBACI3B,UAAU,WACV2D,aAAcb,EACdc,YAAaP,EACbQ,WAAYL,EACZM,cAAeN,IAjBf,qBACIxD,UAAU,WACV2D,aAAcD,EAFlB,SAII,qBAAK1D,UAAU,QAAf,8BA+BR,cAAC,EAAD,CACIuB,UAnDM,SAAAhD,GACTsD,EAAQ1D,SAASI,IAIlBoD,EAAOoC,aAAaxF,GACpBuD,EAAWD,EAAQnE,QAAO,SAAAsG,GAAE,OAAIA,IAAOzF,QAJvCoD,EAAOJ,UAAUhD,GACjBuD,EAAW,GAAD,mBAAKD,GAAL,CAActD,OAiDpB+C,cAAeO,QC9GhBoC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxF,SAASyF,eAAe,SAM1BZ,M","file":"static/js/main.3ee958df.chunk.js","sourcesContent":["import * as Tone from 'tone';\n\nclass toneGenerator {\n\n    constructor() {\n\n\n        this.delay = new Tone.FeedbackDelay('4n');\n        this.vibrato = new Tone.Vibrato();\n        this.filter = new Tone.Filter(20000, 'lowpass');\n        this.distortion = new Tone.Distortion();\n        this.synth = new Tone.Synth();\n\n        this.chain = [\n            this.distortion,\n        ]\n\n        this.connectChain();\n\n    }\n\n    play(frequency, mod) {\n\n        this.synth.triggerAttack();\n        this.filter.frequency.value = mod * 150;\n        this.synth.frequency.value = frequency;\n    }\n\n    changeFreq(frequency) {\n        this.synth.frequency.value = frequency;\n    }\n\n    changeMod(value) {\n        if (this.chain.includes(this.filter)) {\n            this.filter.frequency.value = value * 150;\n        }\n        if (this.chain.includes(this.vibrato)) {\n            this.vibrato.depth.value = value / 100;\n        }\n        if (this.chain.includes(this.delay)) {\n            this.delay.wet.value = value / 100;\n        }\n        \n    }\n\n    stop() {\n        this.synth.triggerRelease()\n    }\n\n    connectChain() {\n\n        // this.chain.reduce((previousNode, currentNode, i, arr) => {\n\n        //     previousNode.connect(currentNode);\n\n        //     if (i === arr.length - 1) {\n        //         currentNode.toDestination();\n        //     }\n\n        //     return currentNode;\n            \n        // });\n\n        this.synth.chain(...this.chain, Tone.Destination)\n\n    }\n\n    addEffect(effect) {\n\n        if (effect === 'filter') {\n            if (this.chain.length < 2) {\n                this.chain.push(this.filter);\n            } else {\n                this.chain.splice(1, 0, this.filter);\n            }            \n        }\n\n\n        if (effect === 'vibrato') {\n            if (this.chain.length < 2) {\n                this.chain.push(this.vibrato);\n            } else {\n                this.chain.splice(3, 0, this.vibrato);\n            }\n        }\n\n        if (effect === 'delay') {\n            if (this.chain.length < 2) {\n                this.chain.push(this.delay);\n            } else {\n                this.chain.splice(4, 0, this.delay);\n            }\n        }\n\n\n        this.connectChain();\n\n    }\n\n    removeEffect(effect) {\n\n        if (effect === 'filter') {\n            this.chain.pop(1).disconnect();\n        }\n\n        if (effect === 'vibrato') {\n            if (this.chain.length === 2) {\n                this.chain.pop(1).disconnect();\n            }\n\n            else {\n                this.chain.pop(2).disconnect();\n            }\n        }\n\n        if (effect === 'delay') {\n            if (this.chain.length === 2) {\n                this.chain.pop(1).disconnect();\n            } else if (this.chain.length === 3) {\n                this.chain.pop(2).disconnect();\n            } else {\n                this.chain.pop(3).disconnect();\n            }\n        }\n\n\n        this.connectChain();\n\n    }\n\n\n\n}\n\n\nexport default toneGenerator;","import React, { useState, useRef, useEffect } from 'react';\n\nconst Selector = (props) => {\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const self = useRef(null);\n\n    useEffect(() => {\n        document.addEventListener('touchstart', e => {\n            if (self.current.contains(e.target)) {\n                return;\n            }\n\n            setMenuOpen(false);\n        });\n    }, []);\n\n    const showOptions = () => {\n\n        return props.options\n            .filter(option => option.value !== props.selectedValue)\n            .map(option => {\n            return (\n                <div\n                    className=\"option\"\n                    onClick={e => {\n                        e.stopPropagation();\n                        props.onSelect(option.value);\n                        setMenuOpen(false);\n                    }}\n                    key={option.value}\n                >\n                    {option.display}\n                </div>\n            );\n        });\n    };\n\n    const displayValue = props.options.find(option => option.value === props.selectedValue);\n\n    return (\n        <div className=\"selector\" ref={self}>\n            <div className=\"selector-name\">\n                {props.name}\n            </div>\n            <div\n                className=\"selector-menu\"\n                onClick={() => setMenuOpen(!menuOpen)}\n                \n            >\n                <div className=\"selector-selected\">\n                    {displayValue.display}\n                </div>\n                <div className=\"selector-options\">\n                    {menuOpen && showOptions()}\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Selector;","import React from 'react';\nimport Selector from './Selector';\n\nconst Controls = props => {\n\n    const BASE_OCTAVES = 7;\n    const OCTAVE_RANGE = 12;\n\n    const keyOptions = [\n        {display: 'C', value: 32.7},\n        { display: 'C#', value: 34.65 },\n        { display: 'D', value: 36.71, },\n        { display: 'D#', value: 38.89 },\n        { display: 'E', value: 41.20, },\n        { display: 'F', value: 43.65, },\n        { display: 'F#', value: 46.25 },\n        { display: 'G', value: 49},\n        { display: 'G#', value: 51.91 },\n        { display: 'A', value: 55 },\n        { display: 'A#', value: 58.27 },\n        { display: 'B', value: 61.74 }\n    ];\n\n    const baseOctaveOptions = [];\n\n    [...Array(BASE_OCTAVES)].forEach((_, i) => {\n        baseOctaveOptions.push({ display: i + 1, value: i + 1 });\n    });\n\n    const octavesOptions = [];\n\n    [...Array(OCTAVE_RANGE)].forEach((_, i) => {\n        octavesOptions.push({ display: i + 1, value: i + 1 });\n    });\n\n    return (\n        <div className=\"margin-top\">\n            <div className=\"controls\">\n\n                <Selector\n                    name=\"Key\"\n                    options={keyOptions}\n                    selectedValue={props.selectedKey}\n                    onSelect={props.setKey}\n                />\n\n                <Selector\n                    name=\"Base Octave\"\n                    options={baseOctaveOptions}\n                    selectedValue={props.startingOctave}\n                    onSelect={props.setStartingOctave}\n                />\n\n                <Selector\n                    name=\"Octave Range\"\n                    options={octavesOptions}\n                    selectedValue={props.octaves}\n                    onSelect={props.setOctaves}\n                />\n\n            </div>\n        </div>\n    );\n\n};\n\nexport default Controls;","import React from 'react';\n\nconst EffectSelect = props => {\n\n    const { activeEffects, addEffect } = props;\n\n    const allEffects = [\n        'filter',\n        'vibrato',\n        'delay'\n    ];\n\n    const showEffects = () => {\n        return allEffects.map(effect => {\n            const active = activeEffects.includes(effect) ? 'active' : '';\n            return (\n                <div\n                    className={`effect ${active}`}\n                    onClick={() => addEffect(effect)}\n                    key={effect}\n                >\n                    {effect}\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div className=\"effect-select\">\n            {showEffects()}\n        </div>\n    );\n};\n\nexport default EffectSelect;","import React, { useState } from 'react';\nimport { scaleLog } from 'd3';\nimport * as Tone from 'tone';\n\nimport './Keyboard.css';\nimport toneGenerator from './toneGenerator';\nimport Controls from './Controls';\nimport EffectSelect from './EffectSelect';\n\nconst Keyboard = (props) => {\n\n    const [player, setPlayer] = useState(new toneGenerator());\n    const [key, setKey] = useState(32.7);\n    const [startingOctave, setStartingOctave] = useState(3);\n    const [octaves, setOctaves] = useState(3);\n    const [effects, setEffects] = useState([]);\n\n\n    const getFreqRange = () => {\n        const floor = key * startingOctave;\n        const ceiling = floor * octaves * 2;\n\n        return [floor, ceiling];\n    };\n\n    const frequencyScale = scaleLog()\n        .domain([\n            window.innerHeight * 0.85,\n            window.innerHeight * .05\n        ])\n        .range(getFreqRange());\n\n    const modScale = scaleLog()\n        .domain([1, 100])\n        .range([1, window.innerWidth]);\n\n    const getFreq = position => {\n        return frequencyScale(parseInt(position));\n    };\n\n    const getMod = position => {\n        return modScale.invert(position);\n    };\n\n    const touchStart = async (e) => {\n\n        const mod = getMod(e.changedTouches[0].clientX);\n        const freq = getFreq(e.changedTouches[0].clientY);\n        player.play(freq, mod);\n\n    };\n\n    const touchMove = e => {\n        const freq = getFreq(e.changedTouches[0].clientY);\n        const mod = getMod(e.changedTouches[0].clientX);\n        player.changeMod(mod);\n        player.changeFreq(freq);\n\n    };\n\n    const touchEnd = () => {\n        player.stop();\n    }\n\n    const startAudioContext = async () => {\n        await Tone.start();\n    };\n\n    const addEffect = effect => {\n        if (!effects.includes(effect)) {\n            player.addEffect(effect);\n            setEffects([...effects, effect]);\n        } else {\n            player.removeEffect(effect);\n            setEffects(effects.filter(fx => fx !== effect));\n        }\n    }\n\n\n    const showKeyboard = () => {\n \n        if (!player) {\n            return (\n                <div\n                    className='keyboard'\n                    onTouchStart={startAudioContext}\n                >\n                    <div className=\"start\">\n                        Press to Start\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className='keyboard'\n                onTouchStart={touchStart}\n                onTouchMove={touchMove}\n                onTouchEnd={touchEnd}\n                onTouchCancel={touchEnd}\n            />\n        );\n    };\n\n    return (\n        <div className='container'>\n            <Controls\n                selectedKey = {key}\n                setKey = {setKey}\n                octaves = {octaves}\n                setOctaves = {setOctaves}\n                startingOctave = {startingOctave}\n                setStartingOctave = {setStartingOctave}\n            />\n\n            {showKeyboard()}\n\n            <EffectSelect\n                addEffect={addEffect}\n                activeEffects={effects}\n            />\n        </div>\n    );\n};\n\nexport default Keyboard;","\nimport './App.css';\nimport Keyboard from './Keyboard';\n\nfunction App() {\n  return (\n    <Keyboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}